// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(in=load, sel=address[12..13], a=ram0Load, b=ram1Load, c=ram2Load, d=ram3Load);
    RAM4K(in=in, load=ram0Load, address=address[0..11], out=ram0Output);
    RAM4K(in=in, load=ram1Load, address=address[0..11], out=ram1Output);
    RAM4K(in=in, load=ram2Load, address=address[0..11], out=ram2Output);
    RAM4K(in=in, load=ram3Load, address=address[0..11], out=ram3Output);
    Mux4Way16(a=ram0Output, b=ram1Output, c=ram2Output, d=ram3Output, sel=address[12..13], out=out);
}
